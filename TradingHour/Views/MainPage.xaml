<Window x:Class="TradingHour.Views.MainPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradingHour.Views"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainPage" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}" />
    </Window.Style>
    <Grid Background="#191919">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="180" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock HorizontalAlignment="Center" Margin="0 4 0 4" Grid.Row="0" Text="TRADING HOURS" FontSize="20" FontWeight="Medium" Foreground="#6ED323" />
        <DataGrid
            HorizontalScrollBarVisibility="Auto"
            Grid.Row="1"
            Margin="4"
            Padding="4"
            ItemsSource="{Binding TradingDetailsList}"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            IsReadOnly="False"
            SelectionMode="Single"
            CanUserSortColumns="True"
            HorizontalAlignment="Stretch"
            BorderBrush="Transparent">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Setters>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Black"></SolidColorBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="Black"></Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                           Value="True">
                            <Setter Property="Background"
                               Value="Black" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn  Width="*" IsReadOnly="False" Header="Country">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                                <TextBlock TextWrapping="WrapWithOverflow" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="4" Text="{Binding Country, Mode=OneWay}" Foreground="#B2B2B2" FontSize="14" FontWeight="Medium">
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  Width="*" IsReadOnly="False" Header="Exchange Name">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                                <TextBlock TextWrapping="WrapWithOverflow" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="4" Text="{Binding ExchangeName}" Foreground="#B2B2B2" FontSize="14" FontWeight="Medium">
                                </TextBlock>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Exchange Symbol" Width="*">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Padding="4" Text="{Binding ExchangeSymbol,Mode=OneWay}" Foreground="#B2B2B2" FontSize="14" FontWeight="Medium"></TextBlock>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Opening In" Width="*">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid
                                HorizontalAlignment="Stretch"
                                Background="Black"
                                VerticalAlignment="Stretch">
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="4" Text="{Binding CurrentOpeningTime}" Foreground="#6ED323" FontSize="14" FontWeight="Medium"></TextBlock>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Closing In" Width="*">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                                <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="4" Text="{Binding CurrentClosingTime}" Foreground="#FE0000" FontSize="14" FontWeight="Medium"></TextBlock>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="True" SortMemberPath="CountDownTime" SortDirection="Ascending" Header="Opening / Closing" Width="*">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Black">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    TextAlignment="Center"
                                    Padding="4"
                                    Text="{Binding CountDownTime, Converter={StaticResource CountDownConverter}}"
                                    Foreground="{Binding TradingCountDown, Converter={StaticResource TradingHourTypeToColorConverter}}"
                                    FontSize="16" FontWeight="Medium"></TextBlock>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="{Binding DataContext.TradingDate1,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="Black" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    Content="{Binding TradingHourNext1, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid VerticalAlignment="Stretch" Background="Black">
                            <TextBlock
                                Background="Black"
                                Text="{Binding DataContext.TradingDate2, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext2, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid VerticalAlignment="Stretch" Background="Black">
                            <TextBlock
                            Background="Black"
                            Text="{Binding DataContext.TradingDate3, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"></TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext3, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="{Binding DataContext.TradingDate4,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext4, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="{Binding DataContext.TradingDate5,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext5, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="{Binding DataContext.TradingDate6,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext6, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="{Binding DataContext.TradingDate7,
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" Background="Black">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentControl
                                    Grid.Row="1"
                                    FontSize="16"
                                    FontWeight="Medium"
                                    Background="Black"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Content="{Binding TradingHourNext7, Converter={StaticResource TradingHoursHightlightTextConverter}}" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding FetchInstructmentWithoutShowDetailCommand}"  MouseAction="LeftDoubleClick"></MouseBinding>
                                </Grid.InputBindings>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.Header>
                        <Grid Background="Black"  HorizontalAlignment="Stretch">
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                TextAlignment="Center"
                                Text="Execute">
                            </TextBlock>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontSize" Value="16"></Setter>
                            <Setter Property="FontWeight" Value="Light"></Setter>
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="Foreground" Value="#B2B2B2"></Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" Background="Black">
                                <CheckBox IsChecked="{Binding CanExecuteCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="Auto" />
                <ColumnDefinition  Width="Auto" />
                <ColumnDefinition  Width="*" />
                <ColumnDefinition  Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Vertical">
                <TextBlock Margin="0 4 0 4" Foreground="White" Text="Auto Update time (seconds)" FontWeight="DemiBold" />
                <TextBox Text="{Binding TimeToUpdate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToStringConverter}}" Foreground="White" BorderBrush="LightGray" Background="Transparent" HorizontalAlignment="Left" Width="200">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                    <Setter Property="CaretBrush" Value="White"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button
                    Margin="0 8 0 0"
                    Command="{Binding ToggleAutoUpdateCmd}"
                    Height="40"  HorizontalAlignment="Left"
                    Content="{Binding IsAutoUpdateName, Mode=OneWay}"
                    Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
            </StackPanel>
            <StackPanel Margin="10 0 0 0" Grid.Column="1" Orientation="Vertical">
                <TextBlock Margin="0 4 0 4" Foreground="White" Text="Countdown warning time (seconds)" FontWeight="DemiBold" />
                <TextBox Text="{Binding TimeToWarning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IntToStringConverter}}" Foreground="White" BorderBrush="LightGray" Background="Transparent" HorizontalAlignment="Left" Width="200">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"></Setter>
                                    <Setter Property="CaretBrush" Value="White"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>
            <StackPanel Margin="8 0 8 0" Grid.Column="2" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Margin="8 0 0 0" Grid.Column="0" Orientation="Vertical">
                        <TextBlock Margin="0 4 0 4" Foreground="White" Text="Command for opening" FontWeight="DemiBold" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding CommandForOpening, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" BorderBrush="LightGray" Background="Transparent">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="CaretBrush" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Margin="0 4 0 4" Foreground="White" Text="Execute on OPEN (s)" FontWeight="DemiBold" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding ExecuteOnOpenTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" BorderBrush="LightGray" Background="Transparent">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="CaretBrush" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Margin="8 0 0 0" Grid.Column="1" Orientation="Vertical">
                        <TextBlock Margin="0 4 0 4" Foreground="White" Text="Command for closing" FontWeight="DemiBold" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding CommandForClosing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" BorderBrush="LightGray" Background="Transparent">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="CaretBrush" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <TextBlock Margin="0 4 0 4" Foreground="White" Text="Execute on CLOSE (s)" FontWeight="DemiBold" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding ExecuteOnCloseTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" BorderBrush="LightGray" Background="Transparent">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"></Setter>
                                            <Setter Property="CaretBrush" Value="White"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </StackPanel>
                </Grid>
            </StackPanel>
            <StackPanel Orientation="Vertical" Grid.Column="3">
                <TextBlock Grid.Column="0" FontSize="14" Margin="4 0 4 0" FontWeight="Medium"  Foreground="#6ED323" VerticalAlignment="Center" HorizontalAlignment="Right" Text="{Binding UpdateCount, Mode=OneWay, Converter={StaticResource DisplayUpdateTimeConverter}}" />
                <Button Grid.Column="1" Command="{Binding UpdateDateCommand}"  Height="40" Width="100"  HorizontalAlignment="Right" Content="Update" Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
            </StackPanel>
        </Grid>
        <Grid Margin="4" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0 8 0 8">
                <TextBlock Visibility="{Binding IsShowMessageLog, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Center" Foreground="White" Margin="0 4 0 4" Text="Messages Log" FontWeight="DemiBold" />
                <Button Margin="10 0 0 0" Command="{Binding ToggleShowMessageBox}" Content="{Binding ToggleMessageLogButtonName, Mode=OneWay}" Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
            </StackPanel>
            <ListBox
                x:Name="LogMessagesBox"
                Grid.Row="1"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ItemsSource="{Binding LogMessages}" Visibility="{Binding IsShowMessageLog, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="White" BorderThickness="1" Foreground="White"
                HorizontalAlignment="Stretch"
                Height="Auto"
                VerticalAlignment="Stretch"  Background="Transparent">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto">
                            <TextBlock TextWrapping="WrapWithOverflow" Foreground="{Binding MessageType, Converter={StaticResource LogMessageColorConverter}}" Text="{Binding Message}" />
                        </ScrollViewer>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <GridSplitter  HorizontalAlignment="Stretch" />
        </Grid>
        <Popup x:Name="ConfigPopup" IsOpen="True" AllowsTransparency="True" Placement="Center" StaysOpen="True"  PopupAnimation="Fade" Width="360" Height="360">
            <Border BorderThickness="1" BorderBrush="White" Background="Black">
                <Grid Margin="4" Background="Black">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <TextBlock FontWeight="SemiBold" Grid.Row="0" FontSize="14" Foreground="#6ED323" Text="Host" Padding="4" />
                        <TextBox Text="{Binding Host, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <TextBlock FontWeight="SemiBold" Grid.Row="0" FontSize="14" Foreground="#6ED323" Text="Port" Padding="4" />
                        <TextBox Text="{Binding Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Vertical">
                        <TextBlock FontWeight="SemiBold" Grid.Row="0" FontSize="14" Foreground="#6ED323" Text="Client ID" Padding="4" />
                        <TextBox Text="{Binding ClientId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel Grid.Row="3" Margin="0 10 0 0">
                        <Button Command="{Binding ConnectToServerCommand}" Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" HorizontalAlignment="Center" Content="Connect"></Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</Window>